buildscript {
    repositories {
        mavenCentral()
    }

    ext.protobuf_version = "3.11.1"
    ext.grpc_version = "1.28.1" // CURRENT_GRPC_VERSION
    ext.grpc_kotlin_version = "0.1.3" // CURRENT_GRPC_KOTLIN_VERSION
    ext.krotoPlusVersion = "0.6.1"

    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.7'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'java'
    id 'kotlin'
    id 'java-library'
    id 'com.google.protobuf'
}

// Include the generated java proto apis in the jar.
sourceSets.main.java.srcDirs += "${project(":proto").buildDir}/generated/source/proto/main/java"
sourceSets.main.java.srcDirs += "${project(":proto").buildDir}/generated/source/proto/main/grpc"

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // Grpc and Protobuf
    compile "com.google.protobuf:protobuf-java:$protobuf_version"
    compile "com.google.protobuf:protobuf-java-util:$protobuf_version"
    compile "io.grpc:grpc-protobuf:$grpc_version"
    compile "io.grpc:grpc-stub:$grpc_version"

    compile "javax.annotation:javax.annotation-api:1.3.1"
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:$protobuf_version" }
    plugins {
        // Specify protoc to generate using kotlin protobuf plugin
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.4.0"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
            }
        }
        ofSourceSet('main')*.plugins {
            // Apply the "grpc" plugin whose spec is defined above, without
            // options.  Note the braces cannot be omitted, otherwise the
            // plugin will not be added. This is because of the implicit way
            // NamedDomainObjectContainer binds the methods.
            grpc {}
        }
    }
}
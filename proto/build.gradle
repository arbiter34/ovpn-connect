buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath group: 'com.google.protobuf', name: 'protobuf-gradle-plugin', version: '0.8.12'
    }
}

apply plugin: 'java-library'
apply plugin: 'com.google.protobuf'

// Include the generated java proto implementations in the jar.
sourceSets.main.java.srcDirs += 'build/generated/source/proto/main/java'

dependencies {
    api "javax.annotation:javax.annotation-api:1.3.1"
    api "com.google.protobuf:protobuf-java:$protobuf_version"
    api "com.google.protobuf:protobuf-java-util:$protobuf_version"
}

protobuf {
    protoc {
        // The artifact spec for the Protobuf Compiler
        artifact = "com.google.protobuf:protoc:$protobuf_version"
    }
    plugins {
        // Optional: an artifact spec for a protoc plugin, with "grpc" as
        // the identifier, which can be referred to in the "plugins"
        // container of the "generateProtoTasks" closure.
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.0.0-pre2'
        }
    }
    generateProtoTasks {
        all().each { task ->
        }
        ofSourceSet('main')*.plugins {
            // Apply the "grpc" plugin whose spec is defined above, without
            // options.  Note the braces cannot be omitted, otherwise the
            // plugin will not be added. This is because of the implicit way
            // NamedDomainObjectContainer binds the methods.
            grpc {}
        }
    }
}